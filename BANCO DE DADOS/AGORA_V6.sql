USE MASTER;
GO

DROP DATABASE AGORA_V6
GO

CREATE DATABASE AGORA_V6;
GO

USE AGORA_V6;

CREATE TABLE TB_FORNECEDORES(
    ID_FORN UNIQUEIDENTIFIER PRIMARY KEY,
    RAZAO_SOCIAL VARCHAR(50),
    CNPJ VARCHAR(20) UNIQUE
);
GO

CREATE TABLE TB_PRODUTOS(
    ID_PRODUTO INT PRIMARY KEY,
    ID_FORN_PROD UNIQUEIDENTIFIER,
    NOME_PRODUTO VARCHAR(50),
	DESCRICAO_PRODUTO VARCHAR(100),
	CATEGORIA VARCHAR(30),
    VALOR_UNI_COMPRA DECIMAL(6,2),
    VALOR_UNI_VENDA DECIMAL(6,2),
	DATA_CADASTRO DATETIME DEFAULT GETDATE(),
	CONSTRAINT ID_FORN_PROD FOREIGN KEY (ID_FORN_PROD) REFERENCES TB_FORNECEDORES(ID_FORN),
);
GO 
	
CREATE TABLE TB_ESTABELECIMENTOS(
    ID_ESTAB UNIQUEIDENTIFIER PRIMARY KEY ,
    CNPJ VARCHAR(20) UNIQUE,
    RAZAO_SOCIAL VARCHAR(50),
);	
GO

CREATE TABLE TB_CLIENTES(
    ID_CLI UNIQUEIDENTIFIER PRIMARY KEY ,
    NOME VARCHAR(20),
	SOBRENOME VARCHAR(50),
	RG	VARCHAR(13), 
	CPF VARCHAR(15) UNIQUE,
	DT_NASC DATETIME,
    SEXO CHAR(1) DEFAULT 'M',  
);
GO

CREATE TABLE TB_FUNCIONARIOS(
	ID_FUNC UNIQUEIDENTIFIER PRIMARY KEY,
--	ID_ESTAB INT,
	NOME VARCHAR(20),
	SOBRENOME VARCHAR(50),	
	RG VARCHAR(12),
	CPF VARCHAR(14) UNIQUE,
	DATA_NASCIMENTO DATETIME, 
    SEXO CHAR(1)DEFAULT 'M', 
	CARGO VARCHAR(20),
	--ADICIONAR FK PARA SABER QUAL ESTABELECIMENTO ESSE FUNC TRABALHA
);
GO

CREATE TABLE TB_PRINCIPAL_PESSOA(
    ID_GERAL INT PRIMARY KEY IDENTITY(1,1),
    ID_ESTAB UNIQUEIDENTIFIER,  
    ID_FUNC UNIQUEIDENTIFIER,  
    ID_CLI UNIQUEIDENTIFIER, 
	ID_FORN UNIQUEIDENTIFIER,  
	CONSTRAINT ID_ESTAB FOREIGN KEY (ID_ESTAB) REFERENCES TB_ESTABELECIMENTOS(ID_ESTAB),
	CONSTRAINT ID_FUNC FOREIGN KEY (ID_FUNC) REFERENCES TB_FUNCIONARIOS(ID_FUNC),
	CONSTRAINT ID_CLI FOREIGN KEY (ID_CLI) REFERENCES TB_CLIENTES(ID_CLI),
	CONSTRAINT ID_FORN FOREIGN KEY (ID_FORN) REFERENCES TB_FORNECEDORES(ID_FORN),
);
GO


CREATE TABLE TB_COMANDA(
    ID_COMANDA INT PRIMARY KEY,
	STATUS_COMANDA CHAR(1) DEFAULT 'D'-- ATIVO (A); DESATIVADO (D); PAGO (P). USADO PARA SABER SE A COMANDA FOI PAGA
);
	INSERT INTO TB_COMANDA(ID_COMANDA) VALUES (9847);
	INSERT INTO TB_COMANDA(ID_COMANDA) VALUES (6050);
	INSERT INTO TB_COMANDA(ID_COMANDA) VALUES (4480);
	INSERT INTO TB_COMANDA(ID_COMANDA) VALUES (7885);
	INSERT INTO TB_COMANDA(ID_COMANDA) VALUES (3245);

CREATE TABLE TB_LISTA_PRODUTOS(
    ID_COMPRA INT PRIMARY KEY IDENTITY (1,1),
    ID_PROD_LISTA INT, 
    ID_COMANDA_LISTA INT, 
    QUANTIDADE INT,
	VALOR_UNITARIO DECIMAL(5,2),
	DATA_COMPRA DATETIME,
	DATA_SAIDA DATETIME,
	CONSTRAINT ID_PROD_LISTA FOREIGN KEY (ID_PROD_LISTA) REFERENCES TB_PRODUTOS(ID_PRODUTO),
	CONSTRAINT ID_COMANDA_LISTA FOREIGN KEY (ID_COMANDA_LISTA) REFERENCES TB_COMANDA(ID_COMANDA),
);

CREATE TABLE TB_ESTOQUE( 
    ID_ESTOQUE INT PRIMARY KEY IDENTITY(1000,1),
    ID_PROD_ESTOQ INT, 
--	ID_ESTAB_ESTOQUE INT,
    QUANTIDADE INT,
	DATA_ENTRADA DATETIME,
    DATE_VENCIMENTO DATETIME,
	CONSTRAINT ID_PROD_ESTOQ FOREIGN KEY (ID_PROD_ESTOQ) REFERENCES TB_PRODUTOS(ID_PRODUTO),
--	CONSTRAINT ID_ESTAB_ESTOQUE FOREIGN KEY (ID_ESTAB_ESTOQUE) REFERENCES TB_PRINCIPAL_PESSOA(ID_GERAL)
);
GO

CREATE TABLE TB_CONTAS_RECEBER(
    ID_RECEBER INT PRIMARY KEY IDENTITY(1,1),
    ID_COMANDA_RECEBER INT,
	METODO_PAGAMENTO VARCHAR(2), --CARTAO(C), DINHEIRO(D), CARTAO/DINHEIRO(CD) 
	DINHEIRO DECIMAL(7,2),
	DEBITO   DECIMAL(7,2),
	CREDITO  DECIMAL (7,2), 
	DATA_COMPRA DATETIME, 
	DATA_PRIVISTA_RECEBER DATETIME,
	CONSTRAINT ID_COMANDA_RECEBER FOREIGN KEY (ID_COMANDA_RECEBER) REFERENCES TB_COMANDA(ID_COMANDA)
);

CREATE TABLE TB_CONTATO(
    ID_CONTATO INT PRIMARY KEY IDENTITY(1,1),    
    ID_GERAL_TEL INT, 
    NUMERO VARCHAR(14),
    EMAIL VARCHAR(50),
    NUMERO_ATIVO BIT,
	CONSTRAINT ID_GERAL_TEL FOREIGN KEY (ID_GERAL_TEL) REFERENCES TB_PRINCIPAL_PESSOA(ID_GERAL),
);

GO
CREATE TABLE TB_ENDERECO(
    ID_END INT IDENTITY(1,1) PRIMARY KEY,
    ID_GERAL_END INT NOT NULL,
	CEP		CHAR(10),
	RUA		VARCHAR(100),
	NUMERO	VARCHAR(5),
	BAIRRO	VARCHAR(30),
	ESTADO  VARCHAR(20),
	CIDADE  VARCHAR(30),
	CONSTRAINT ID_GERAL_END FOREIGN KEY (ID_GERAL_END) REFERENCES TB_PRINCIPAL_PESSOA(ID_GERAL),
);

CREATE TABLE TB_COMPRAS(
    ID_COMPRA INT PRIMARY KEY IDENTITY(1,1), 
    STATUS CHAR(1), --PENDENTE(P), CONFIRMADO(C), FINALIZADO(F)
);
GO

CREATE TABLE TB_COMPRA_PRODUTO(
	ID INT PRIMARY KEY IDENTITY(1,1),
	ID_COMPRA_PRODUTO INT,
	ID_PRODUTO INT, 
	QUANTIDADE INT,
	-- VALOR UNITÁRIO PUXA PELO ID DO PRODUTO
	-- VALOR TOTAL 
	CONSTRAINT ID_COMPRA_PRODUTO FOREIGN KEY (ID_COMPRA_PRODUTO) REFERENCES TB_COMPRAS(ID_COMPRA),
	CONSTRAINT ID_PRODUTO FOREIGN KEY (ID_PRODUTO) REFERENCES TB_PRODUTOS(ID_PRODUTO),
);

CREATE TABLE TB_CONTAS_PAGAR(
    ID_PAGAR INT PRIMARY KEY IDENTITY(1000,1),
    ID_COMPRA_PAGAR INT,  
	CONSTRAINT ID_COMPRA FOREIGN KEY (ID_COMPRA_PAGAR) REFERENCES TB_COMPRAS(ID_COMPRA),
    -- VALOR PAGAR = SOMA DO VALOR UNITARIO * QUANTIDADE DE CADA LINHA DA COMPRA
    -- ARRUMAR
)
GO

CREATE TABLE TB_HIERARQUIA(
	ID_HIERARQUIA INT PRIMARY KEY IDENTITY(1,1),
	CARGO VARCHAR(30)
);
GO
		INSERT INTO TB_HIERARQUIA VALUES('ADMINISTRADOR')
		INSERT INTO TB_HIERARQUIA VALUES('CAIXA')
		INSERT INTO TB_HIERARQUIA VALUES('BALCONISTA')
		INSERT INTO TB_HIERARQUIA VALUES('GERENTE') 
GO
CREATE TABLE TB_LOGIN(
	ID_LOGIN INT PRIMARY KEY IDENTITY(1,1),
	ID_HIERARQUIA INT, 
	USUARIO VARCHAR(40) NOT NULL,
	SENHA VARCHAR(20) NOT NULL,
	CONSTRAINT ID_HIERARQUIA FOREIGN KEY (ID_HIERARQUIA) REFERENCES TB_HIERARQUIA(ID_HIERARQUIA),
	/*
	EXEMPLO CRIPTOGRAFIA
	SENHA = 12346
	SENHA_CRIPTOGRAFADA = Convert(varbinary(100), pwdEncrypt(SENHA))
	*/
);

/*========================================================================
  ========================================================================
					FUNCTION RETORNA ID_GERAL	
  =======================================================================
  =======================================================================*/

GO
CREATE FUNCTION PROCURA_ID_GERAL (@CPF_CNPJ VARCHAR(20)) 
RETURNS INT
AS
BEGIN 
	DECLARE @ID_GERAL INT

		IF (@CPF_CNPJ) IN (SELECT CPF FROM TB_FUNCIONARIOS)
			BEGIN
				SET @ID_GERAL = (SELECT ID_GERAL
								 FROM TB_PRINCIPAL_PESSOA	
								INNER JOIN 
										TB_FUNCIONARIOS
								ON 
										TB_PRINCIPAL_PESSOA.ID_FUNC = TB_FUNCIONARIOS.ID_FUNC
								WHERE CPF = @CPF_CNPJ)
			END
			
		ELSE IF (@CPF_CNPJ) IN (SELECT CPF FROM TB_CLIENTES)
			BEGIN
				SET @ID_GERAL = (SELECT ID_GERAL
								 FROM TB_PRINCIPAL_PESSOA	
								 INNER JOIN 
									TB_CLIENTES
								  ON 
								    TB_PRINCIPAL_PESSOA.ID_FUNC = TB_CLIENTES.ID_CLI
								 WHERE CPF = @CPF_CNPJ)
				END
		ELSE IF (@CPF_CNPJ) IN (SELECT CNPJ FROM TB_FORNECEDORES)
			BEGIN
				SET @ID_GERAL = (SELECT ID_GERAL
								 FROM TB_PRINCIPAL_PESSOA	
								 INNER JOIN 
									TB_FORNECEDORES
								  ON 
								    TB_PRINCIPAL_PESSOA.ID_FUNC = TB_FORNECEDORES.ID_FORN
								 WHERE CNPJ = @CPF_CNPJ)
			END
		ELSE IF (@CPF_CNPJ) IN (SELECT CNPJ FROM TB_ESTABELECIMENTOS)
			BEGIN
				SET @ID_GERAL = (SELECT ID_GERAL
								 FROM TB_PRINCIPAL_PESSOA	
								 INNER JOIN 
									TB_ESTABELECIMENTOS
								  ON 
								    TB_PRINCIPAL_PESSOA.ID_FUNC = TB_ESTABELECIMENTOS.ID_ESTAB
								 WHERE CNPJ = @CPF_CNPJ)
				END
			RETURN @ID_GERAL
END

/*========================================================================
  ========================================================================
							PROCEDURES
  =======================================================================
  =======================================================================*/

GO 
CREATE PROCEDURE PROC_COMPRA_PAGA_CLIENTE
	@ACAO CHAR(1), -- INSERIR(I), EXCLUIR(E), PAGAR(P), CAIXA(C)
	@COMANDA INT, 
	@ID_PRODUTO INT,
	@QUANTIDADE INT,
	@METODO_PAGAMENTO VARCHAR(2), 
	@DINHEIRO DECIMAL(7,2),
	@DEBITO   DECIMAL(7,2),
	@CREDITO  DECIMAL (7,2)
AS
	BEGIN 		
		DECLARE @STATUS_ATUAL CHAR(1) = (SELECT STATUS_COMANDA
											FROM TB_COMANDA
											WHERE ID_COMANDA = @COMANDA )
		IF(@ACAO = 'I')
			BEGIN
			-- SISTEMA VERIFICA SE ESTA DESATIVADO
			IF (@STATUS_ATUAL = 'D')
				BEGIN
					UPDATE TB_COMANDA
					SET STATUS_COMANDA = 'A' -- ATUALIZA PARA ATIVADO
					WHERE @COMANDA = ID_COMANDA
					
					INSERT INTO TB_LISTA_PRODUTOS(ID_PROD_LISTA, -- INSERE OS PRODUTOS NA LISTA
												  ID_COMANDA_LISTA,
												  QUANTIDADE,
												  VALOR_UNITARIO,
												  DATA_COMPRA)
												  
					VALUES
							(@ID_PRODUTO,
							 @COMANDA,
							 @QUANTIDADE,							 
							 (SELECT VALOR_UNI_VENDA
							  FROM TB_PRODUTOS
							  WHERE ID_PRODUTO = @ID_PRODUTO),
							 GETDATE())
				END
		
			-- SOMENTE INSERIR OS ITENS, NÃO PRECISA ALTERAR O STATUS
			ELSE
				BEGIN		
					-- SE O PRODUTO ESTIVER NA COMANDA, SOMENTE MODIFICAR A QUANTIDADE
					IF @ID_PRODUTO IN (SELECT ID_PROD_LISTA
									   FROM  TB_LISTA_PRODUTOS
									   WHERE ID_COMANDA_LISTA = @COMANDA) 
						BEGIN
							UPDATE TB_LISTA_PRODUTOS
							SET QUANTIDADE = QUANTIDADE + @QUANTIDADE
							WHERE ID_PROD_LISTA = @ID_PRODUTO
								
						END
					ELSE
						BEGIN
						-- CASO NAO ESTEJA, ELE ADICIONA
							INSERT INTO TB_LISTA_PRODUTOS(ID_PROD_LISTA, -- INSERE OS PRODUTOS NA LISTA
												  ID_COMANDA_LISTA,
												  QUANTIDADE,
												  VALOR_UNITARIO)
												  
					VALUES
							(@ID_PRODUTO,
							 @COMANDA,
							 @QUANTIDADE,							 
							 (SELECT VALOR_UNI_VENDA
							  FROM TB_PRODUTOS
							  WHERE ID_PRODUTO = @ID_PRODUTO))
						END		   
				  END
			END

			IF(@ACAO = 'E')
				BEGIN
					DELETE FROM TB_LISTA_PRODUTOS WHERE ID_PROD_LISTA = @ID_PRODUTO
				END

			IF(@ACAO = 'C')
				IF(SELECT STATUS_COMANDA FROM TB_COMANDA) = 'D'
					BEGIN
						RETURN 'O CLIENTE NÃO CONSUMIU NADA'
					END
				ELSE
					BEGIN
						SELECT ID_PROD_LISTA AS CODIGO_DO_PRODUTO,
							   ID_COMANDA_LISTA AS COMANDA,
							   QUANTIDADE,
							   VALOR_UNITARIO,
							   (SELECT QUANTIDADE * VALOR_UNITARIO) AS SUBTOTAL
						FROM TB_LISTA_PRODUTOS
						WHERE ID_COMANDA_LISTA = @COMANDA
					END
			IF(@ACAO = 'P') 
				BEGIN
					IF(@STATUS_ATUAL != 'D')
						BEGIN				
						UPDATE TB_COMANDA -- ALTERA O STATUS PARA DESATIVADO
						SET STATUS_COMANDA = 'D'
						WHERE ID_COMANDA = @COMANDA

						UPDATE TB_LISTA_PRODUTOS
						SET DATA_SAIDA = GETDATE()
						WHERE ID_COMANDA_LISTA = @COMANDA

						INSERT INTO TB_CONTAS_RECEBER
						VALUES (@COMANDA,
								@METODO_PAGAMENTO,
								@DINHEIRO,
								@DEBITO,
								@CREDITO,
								GETDATE(),
								(CASE 
									WHEN @METODO_PAGAMENTO = 'D' -- DINHEIRO
									THEN GETDATE()

									WHEN @METODO_PAGAMENTO = 'C'  -- CARTAO
									THEN GETDATE() + 30

									WHEN @METODO_PAGAMENTO = 'CD'  -- CARTAO/DINHEIRO
									THEN GETDATE() + 30
								 END
									) 
								)

						DECLARE PRODUTO_CURSOR CURSOR
						FOR SELECT ID_PROD_LISTA, QUANTIDADE
							FROM TB_LISTA_PRODUTOS
							WHERE ID_COMANDA_LISTA = @COMANDA

						OPEN PRODUTO_CURSOR
						FETCH NEXT FROM PRODUTO_CURSOR 
						INTO @ID_PRODUTO,
							 @QUANTIDADE

						WHILE @@FETCH_STATUS = 0 -- SUBTRAI DO ESTOQUE A QUANTIDADE DE PRODUTO COMPRADO
							BEGIN 
								UPDATE TB_ESTOQUE
								SET QUANTIDADE = QUANTIDADE - @QUANTIDADE

								WHERE ID_PROD_ESTOQ = @ID_PRODUTO 

								FETCH NEXT FROM PRODUTO_CURSOR INTO @ID_PRODUTO,
																	@QUANTIDADE
							END
						CLOSE PRODUTO_CURSOR
						DEALLOCATE PRODUTO_CURSOR	
					END
				END
		RETURN @COMANDA 
	END
 
 GO
CREATE PROCEDURE PROC_LOGIN
	@USUARIO VARCHAR(30),
	@SENHA VARCHAR(30)
AS
	BEGIN
		DECLARE @PASS VARCHAR(30)= (SELECT SENHA FROM TB_LOGIN WHERE USUARIO = @USUARIO)

		IF(@USUARIO) NOT IN (SELECT USUARIO FROM TB_LOGIN)
			BEGIN
				RETURN('USUARIO OU SENHA ERRADO')
			END

		ELSE IF(@SENHA != @PASS)
			BEGIN
				RETURN('USUARIO OU SENHA ERRADO')
			END
		ELSE 
			BEGIN
				RETURN('LOGADO COM SUCESSO') 
			END
	END

GO
CREATE PROCEDURE PROC_ENDERECO
	@ACAO CHAR(1),
	@CPF_CNPJ VARCHAR(20),  
	@CEP CHAR(10) NULL, 
	@RUA VARCHAR(100) NULL, 
	@NUMERO VARCHAR(5)NULL,
	@BAIRRO VARCHAR(30)NULL, 
	@ESTADO VARCHAR(20)NULL,
	@CIDADE VARCHAR(30)NULL
AS
	BEGIN
		DECLARE @ID_GERAL INT = (SELECT DBO.PROCURA_ID_GERAL(@CPF_CNPJ))

			IF(@ACAO = 'I') -- INSERIR
				BEGIN
					INSERT INTO TB_ENDERECO	
							(ID_GERAL_END, CEP, RUA, NUMERO, BAIRRO, ESTADO, CIDADE)
					VALUES
							(@ID_GERAL, @CEP, @RUA, @NUMERO, @BAIRRO, @ESTADO, @CIDADE)
				END	

			ELSE IF(@ACAO = 'A')	--ALTERAR				
					BEGIN 
						UPDATE TB_ENDERECO	
						SET  CEP = @CEP,
							 RUA = @RUA,							 
							 NUMERO = @NUMERO,
							 BAIRRO = @BAIRRO,
							 ESTADO = @ESTADO,
							 CIDADE = @CIDADE
						WHERE ID_END = @ID_GERAL
					END

			ELSE IF(@ACAO = 'E') --EXCLUIR
				BEGIN
					DELETE FROM TB_ENDERECO WHERE ID_GERAL_END = @ID_GERAL
				END
			ELSE
				BEGIN
					RAISERROR('ACAO NAO IMPLEMENTADA',16,1);
				END
	END

GO
CREATE PROCEDURE PROC_CONTATO
	@ACAO CHAR(1), 
	@CPF_CNPJ VARCHAR(20), 
    @NUMERO VARCHAR(14),
    @EMAIL VARCHAR(50),
    @NUMERO_ATIVO BIT 	 
AS
	BEGIN			
		 DECLARE @ID_GERAL INT = (SELECT DBO.PROCURA_ID_GERAL(@CPF_CNPJ))

			IF(@ACAO = 'I') -- INSERIR
				BEGIN
					INSERT INTO TB_CONTATO	
							(ID_GERAL_TEL, NUMERO, EMAIL, NUMERO_ATIVO)
					VALUES
							(@ID_GERAL, @NUMERO, @EMAIL, @NUMERO_ATIVO)
				END	

			ELSE IF(@ACAO = 'A')	--ALTERAR				
					BEGIN 
						UPDATE TB_CONTATO	
						SET  EMAIL = @EMAIL,							 
							 NUMERO = @NUMERO,
							 NUMERO_ATIVO = @NUMERO_ATIVO
							  
						WHERE ID_GERAL_TEL = @ID_GERAL
					END

			ELSE IF(@ACAO = 'E') --EXCLUIR
				BEGIN
					DELETE FROM TB_CONTATO WHERE ID_GERAL_TEL = @ID_GERAL
				END
			ELSE
				BEGIN
					RAISERROR('ACAO NAO IMPLEMENTADA',16,1);
				END
	END
GO

CREATE PROCEDURE PROC_COMPRA_ESTAB
	@ACAO CHAR(1),
	@ID_PRODUTO INT,
	@ID_COMPRA INT,
	@QUANTIDADE INT
AS
	DECLARE @VALOR_UNIT DECIMAL(5,2) = (SELECT VALOR_UNI_COMPRA FROM TB_PRODUTOS WHERE ID_PRODUTO = @ID_PRODUTO)

	BEGIN
		IF(@ACAO = 'I')
			BEGIN
				INSERT INTO TB_COMPRA_PRODUTO VALUES ( @ID_COMPRA, @ID_PRODUTO, @QUANTIDADE)				
			END

		ELSE IF(@ACAO = 'A')
			BEGIN
				UPDATE TB_COMPRA_PRODUTO
				SET ID_PRODUTO = @ID_PRODUTO,
					QUANTIDADE = @QUANTIDADE
				WHERE ID_COMPRA_PRODUTO = @ID_COMPRA
			END

		ELSE IF(@ACAO = 'E')
			BEGIN
				DELETE FROM TB_COMPRA_PRODUTO WHERE ID_COMPRA_PRODUTO = @ID_COMPRA 
												AND ID_PRODUTO = @ID_PRODUTO
			END

		ELSE 
			BEGIN
				RAISERROR('AÇÃO NÃO IMPLEMENTADA',16,1)				
				RAISERROR('ERRO NA PROCEDURE PROC_COMPRA_ESTAB. A AÇÃO NÃO EXISTE',16,1)
			END
	END

/*========================================================================
  ========================================================================
			TRIGGERS PARA INSERIR NA TABELA PESSOA PRINCIPAL	
  =======================================================================
  =======================================================================*/
GO 
CREATE TRIGGER INSERE_FUNCIONARIOS
ON TB_FUNCIONARIOS 
AFTER INSERT 
AS 
	BEGIN
		DECLARE @ID_FUNCIONARIO UNIQUEIDENTIFIER,
				@CARGO VARCHAR(30),  								   
				@CPF VARCHAR(14),	
				@HIERARQUIA INT,
				@DATA_NASCIMENTO VARCHAR(8),
				@DATA VARCHAR(10)


	/*	SELECT @ID_FUNCIONARIO = ID_FUNC,
			   @CARGO = CARGO,				 
			   @CPF =   REPLACE(REPLACE (CPF,'.' ,''), '-',''),
			   @DATA = FORMAT(DATA_NASCIMENTO, 'dd/MM/yyyy'),
			   @DATA_NASCIMENTO = REPLACE(@DATA,'/','')
			   
		FROM INSERTED	
	*/	

		SELECT @ID_FUNCIONARIO = ID_FUNC 
		FROM INSERTED

		SELECT @HIERARQUIA = ID_HIERARQUIA
		FROM TB_HIERARQUIA 
		WHERE CARGO = @CARGO
			
		INSERT INTO TB_PRINCIPAL_PESSOA (ID_FUNC) 
			VALUES (@ID_FUNCIONARIO)

	--	INSERT INTO TB_LOGIN VALUES (@HIERARQUIA, @CPF,@DATA_NASCIMENTO)			 
	END	
GO

CREATE TRIGGER INSERE_FORNECEDOR
ON TB_FORNECEDORES 
AFTER INSERT 
AS 
	BEGIN
		DECLARE @ID_FORNECEDOR UNIQUEIDENTIFIER = (SELECT ID_FORN
									   FROM INSERTED) 

		INSERT INTO TB_PRINCIPAL_PESSOA (ID_FORN) 
				VALUES (@ID_FORNECEDOR)
	END
GO

CREATE TRIGGER INSERE_CLIENTE
ON TB_CLIENTES 
AFTER INSERT 
AS 
	BEGIN
		DECLARE @ID_CLIENTE UNIQUEIDENTIFIER = (SELECT ID_CLI
												FROM INSERTED)
												
		DECLARE @ID_GERAL INT = (SELECT ID_GERAL 
								 FROM TB_PRINCIPAL_PESSOA
								 WHERE ID_CLI = @ID_CLIENTE)

		DECLARE @EMAIL VARCHAR(30) = (SELECT EMAIL FROM TB_CONTATO WHERE ID_GERAL_TEL = @ID_GERAL)									

		INSERT INTO TB_PRINCIPAL_PESSOA (ID_CLI) 
				VALUES (@ID_CLIENTE)
		IF (@EMAIL) IS NOT NULL 
			BEGIN
				INSERT INTO TB_LOGIN (USUARIO) VALUES (@EMAIL)
			END
	END
GO

CREATE TRIGGER INSERE_ESTABELECIMENTO
ON TB_ESTABELECIMENTOS 
AFTER INSERT 
AS 
	BEGIN
		DECLARE @ID_ESTABELECIMENTO UNIQUEIDENTIFIER = (SELECT ID_ESTAB
											FROM INSERTED) 

		INSERT INTO TB_PRINCIPAL_PESSOA (ID_ESTAB) 
				VALUES (@ID_ESTABELECIMENTO)
	END
GO

CREATE TRIGGER AUMENTA_ESTOQUE_E_GERA_CONTAS
ON TB_COMPRAS
AFTER UPDATE
AS 	
	BEGIN 	
		DECLARE @ID_COMPRA INT =(SELECT ID_COMPRA FROM TB_COMPRAS WHERE STATUS = 'C'),
				@ID_PRODUTO INT,
				@QUANTIDADE INT

		DECLARE STATUS_CURSOR CURSOR
			FOR SELECT ID_PRODUTO, QUANTIDADE
			FROM TB_COMPRA_PRODUTO
					INNER JOIN TB_COMPRAS 
					ON TB_COMPRA_PRODUTO.ID_COMPRA_PRODUTO = TB_COMPRAS.ID_COMPRA
		WHERE ID_COMPRA = @ID_COMPRA		

		OPEN STATUS_CURSOR
		FETCH NEXT FROM STATUS_CURSOR  
		INTO @ID_PRODUTO, @QUANTIDADE
 
		WHILE @@FETCH_STATUS = 0
			BEGIN		 
				IF(@ID_PRODUTO) IN (SELECT ID_PROD_ESTOQ FROM TB_ESTOQUE)
					BEGIN			 
						UPDATE TB_ESTOQUE
						SET QUANTIDADE += @QUANTIDADE						
						WHERE ID_PROD_ESTOQ = @ID_PRODUTO								
					END
					ELSE
					BEGIN
						INSERT INTO TB_ESTOQUE VALUES(@ID_PRODUTO,@QUANTIDADE, GETDATE(), GETDATE() + 30)
					END						
				FETCH NEXT FROM STATUS_CURSOR INTO @ID_PRODUTO, @QUANTIDADE									
			END	

			CLOSE STATUS_CURSOR		
			DEALLOCATE STATUS_CURSOR

			UPDATE TB_COMPRAS
			SET STATUS = 'F'
			WHERE ID_COMPRA = @ID_COMPRA				
				
			INSERT INTO TB_CONTAS_PAGAR	VALUES(@ID_COMPRA)		
	 END 
GO	 

CREATE VIEW VW_CONTAS_PAGAR
AS
	SELECT ID_COMPRA_PRODUTO, 
		   TB_PRODUTOS.ID_PRODUTO, 
		   TB_PRODUTOS.DESCRICAO_PRODUTO,
			QUANTIDADE,
			TB_PRODUTOS.VALOR_UNI_COMPRA,
			(SELECT QUANTIDADE * VALOR_UNI_COMPRA) AS SUBTOTAL,
			(SELECT SUM(QUANTIDADE * VALOR_UNI_COMPRA)) AS TOTAL
	FROM TB_COMPRA_PRODUTO 
		INNER JOIN TB_PRODUTOS ON TB_PRODUTOS.ID_PRODUTO = TB_COMPRA_PRODUTO.ID_PRODUTO
	GROUP BY ID_COMPRA_PRODUTO,
			 TB_PRODUTOS.ID_PRODUTO,
			 TB_PRODUTOS.DESCRICAO_PRODUTO,
			 QUANTIDADE,
			 TB_PRODUTOS.VALOR_UNI_COMPRA 

				
/*
	INSERT INTO TB_FORNECEDORES VALUES (NEWID(), 'COCA COLA BRASIL','81.709.591/0001-72')
	INSERT INTO TB_FORNECEDORES VALUES (NEWID(), 'BUNGUE PAES','30.576.261/0001-15')
	INSERT INTO TB_FORNECEDORES VALUES (NEWID(), 'AGRO DORITOS','66.159.730/0001-48')

	INSERT INTO TB_PRODUTOS VALUES (10, (SELECT ID_FORN FROM TB_FORNECEDORES WHERE RAZAO_SOCIAL = 'COCA COLA BRASIL' ),'COCA-COLA 2L', NULL, 'REFRIGERANTE', 5,8, GETDATE())
	INSERT INTO TB_PRODUTOS VALUES (12, (SELECT ID_FORN FROM TB_FORNECEDORES WHERE RAZAO_SOCIAL = 'BUNGUE PAES' ),'FARINHA 20K', 'FARINHA SEARA TIPO 2 20K - SEM GLUTEN', 'FARINHA', 50.60, NULL, GETDATE())
	INSERT INTO TB_PRODUTOS VALUES (19, (SELECT ID_FORN FROM TB_FORNECEDORES WHERE RAZAO_SOCIAL = 'AGRO DORITOS' ),	'DORITOS 720G', NULL, 'SALGADINHOS', 9, 12.98, GETDATE())
	
	INSERT INTO TB_COMPRAS VALUES('P')
	INSERT INTO TB_COMPRAS VALUES('P')
	EXEC PROC_COMPRA_ESTAB 'I',10,1,1000
	EXEC PROC_COMPRA_ESTAB 'I',12,1,200
	EXEC PROC_COMPRA_ESTAB 'I',19,1,400	
--	EXEC PROC_COMPRA_ESTAB 'I',12,2,100
--	EXEC PROC_COMPRA_ESTAB 'I',10,2,500
--	EXEC PROC_COMPRA_ESTAB 'I',19,2,200
	
	UPDATE TB_COMPRAS SET STATUS = 'C' WHERE ID_COMPRA = 1
--	UPDATE TB_COMPRAS SET STATUS = 'C' WHERE ID_COMPRA = 2

	EXEC PROC_COMPRA_PAGA_CLIENTE 'I',3245, 10, 500,NULL, NULL, NULL, NULL
	EXEC PROC_COMPRA_PAGA_CLIENTE 'I',3245, 12, 100,NULL, NULL, NULL, NULL
	EXEC PROC_COMPRA_PAGA_CLIENTE 'I',3245, 19, 200,NULL, NULL, NULL, NULL

	EXEC PROC_COMPRA_PAGA_CLIENTE 'I',4480, 10, 500,NULL, NULL, NULL, NULL
	EXEC PROC_COMPRA_PAGA_CLIENTE 'I',4480, 12, 100,NULL, NULL, NULL, NULL
	EXEC PROC_COMPRA_PAGA_CLIENTE 'I',4480, 19, 200,NULL, NULL, NULL, NULL

	EXEC PROC_COMPRA_PAGA_CLIENTE 'P',3245, NULL, NULL,C, NULL, NULL, 1000
	EXEC PROC_COMPRA_PAGA_CLIENTE 'P',4480, NULL, NULL,D, 15598, NULL, NULL

	SELECT * FROM TB_COMANDA
	SELECT * FROM TB_LISTA_PRODUTOS	
	SELECT * FROM TB_ESTOQUE
	SELECT * FROM TB_CONTAS_PAGAR
	SELECT * FROM TB_CONTAS_RECEBER



	INSERT INTO TB_ESTABELECIMENTOS VALUES (NEWID(), 'AGORA PAES II','99.141.683/0001-64')
	INSERT INTO TB_ESTABELECIMENTOS VALUES (NEWID(), 'AGORA E DEPOIS','51.245.830/0001-10')
	INSERT INTO TB_ESTABELECIMENTOS VALUES (NEWID(), 'AGORA DOANE IV','57.260.161/0001-31')

	INSERT INTO TB_CLIENTES VALUES (NEWID(), 'Otávio','Luiz Nicolas Corte Real','28.792.065-3','763.327.498-06','19/05/1994', 'M')
	INSERT INTO TB_CLIENTES VALUES (NEWID(), 'Brenda','Mirella Silva','14.068.796-8','671.226.233-00','05/01/2000', 'F')
	INSERT INTO TB_CLIENTES VALUES (NEWID(), 'Thomas','Kaique Arthur da Cruz','42.880.242-4','193.171.433-93','20/02/1964', 'M')

	INSERT INTO TB_FUNCIONARIOS VALUES (NEWID(), 'Giovana','Bruna Isadora Silveira', '49.052.192-7','104.911.713-15','24/06/1976', 'F', 'ADMINISTRADOR')
	INSERT INTO TB_FUNCIONARIOS VALUES (NEWID(), 'Fábio','Emanuel Lima','17.153.772-5','524.546.303-20','11/08/1981', 'M','GERENTE')
	INSERT INTO TB_FUNCIONARIOS VALUES (NEWID(), 'Elisa','Yasmin da Mata','19.639.673-6','735.776.913-52','25/06/1981', 'F','BALCONISTA')

	INSERT INTO TB_ENDERECO	(ID_GERAL_END, CEP, RUA, NUMERO, BAIRRO, ESTADO, CIDADE) VALUES((SELECT DBO.PROCURA_ID_GERAL('524.546.303-20')), '06690-320','ALAMEDA LOBO','112','ITAQUI','SP','ITAPEVI')
	
	INSERT INTO TB_CONTATO(ID_GERAL_TEL, NUMERO, EMAIL, NUMERO_ATIVO) VALUES((SELECT DBO.PROCURA_ID_GERAL('524.546.303-20')), '(11)94907-7993', 'LUCAS.AVILA76@GMAIL.COM', 1)
	
	EXEC PROC_ENDERECO 'I', '524.546.303-20','TESTE',NULL,NULL,NULL,NULL,NULL
	EXEC PROC_CONTATO 'I','123.4567','1149097993','LUCAS.AVILA@GMAIL.COM','1'
	SP_HELPTEXT PROC_CONTATO



SELECT * FROM TB_LOGIN
SELECT * FROM TB_HIERARQUIA
SELECT * FROM TB_ESTABELECIMENTOS 
SELECT * FROM TB_CLIENTES  
SELECT * FROM TB_FORNECEDORES
SELECT * FROM TB_CONTATO
SELECT * FROM TB_ENDERECO
SELECT * FROM TB_PRINCIPAL_PESSOA
SELECT * FROM TB_FUNCIONARIOS
SELECT * FROM VW_CONTAS_PAGAR
SELECT * FROM TB_PRODUTOS 
SELECT * FROM TB_COMPRA_PRODUTO
SELECT * FROM TB_ESTOQUE
SELECT * FROM TB_CONTAS_PAGAR
SELECT * FROM TB_COMPRAS 
SP_HELPTEXT PROC_COMPRA_ESTAB

*/